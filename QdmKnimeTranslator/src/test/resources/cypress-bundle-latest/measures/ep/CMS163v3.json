{
  "id": "40280381-4600-425F-0146-1F68661E0ED5",
  "nqf_id": "0064",
  "hqmf_id": "40280381-4600-425F-0146-1F68661E0ED5",
  "hqmf_set_id": "0DAC1DEC-E011-493B-A281-7C28964872DD",
  "hqmf_version_number": 3,
  "cms_id": "CMS163v3",
  "name": "Diabetes: Low Density Lipoprotein (LDL) Management",
  "description": "Percentage of patients 18–75 years of age with diabetes whose LDL-C was adequately controlled (<100 mg/dL) during the measurement period.",
  "type": "ep",
  "category": "Diabetes",
  "map_fn": "function() {\n          var patient = this;\n          var effective_date = <%= effective_date %>;\n          var enable_logging = <%= enable_logging %>;\n          var enable_rationale = <%= enable_rationale %>;\n          var short_circuit = <%= short_circuit %>;\n\n        <% if (!test_id.nil? && test_id.class==Moped::BSON::ObjectId) %>\n          var test_id = new ObjectId(\"<%= test_id %>\");\n        <% else %>\n          var test_id = null;\n        <% end %>\n\n          hqmfjs = {}\n          <%= init_js_frameworks %>\n\n          hqmfjs.effective_date = effective_date;\n          hqmfjs.test_id = test_id;\n      \n          \n        var patient_api = new hQuery.Patient(patient);\n\n        \n        // #########################\n        // ##### DATA ELEMENTS #####\n        // #########################\n\n        hqmfjs.nqf_id = '0064';\n        hqmfjs.hqmf_id = '40280381-4600-425F-0146-1F68661E0ED5';\n        hqmfjs.sub_id = null;\n        if (typeof(test_id) == 'undefined') hqmfjs.test_id = null;\n\n        OidDictionary = {'2.16.840.1.113883.3.526.3.1248':{'LOINC':['13457-7','18262-6','2089-1']},'2.16.840.1.113883.3.464.1003.103.12.1001':{'SNOMED-CT':['190330002','190331003','190368000','190369008','190372001','190389009','190390000','199223000','199225007','199226008','199227004','199228009','199229001','199230006','23045005','237599002','237618001','237627000','28032008','313435000','313436004','314771006','314772004','314893005','314894004','314902007','314903002','314904008','359642000','44054006','46635009','4783006','75682002','76751001','81531005','9859006'],'ICD-9-CM':['250.00','250.01','250.02','250.03','250.10','250.11','250.12','250.13','250.20','250.21','250.22','250.23','250.30','250.31','250.32','250.33','250.41','250.42','250.43','250.50','250.51','250.52','250.53','250.60','250.61','250.62','250.63','250.70','250.71','250.72','250.73','250.80','250.81','250.82','250.83','250.90','250.91','250.92','250.93','648.01','648.02','648.03','648.04'],'ICD-10-CM':['E10.10','E10.11','E10.21','E10.22','E10.29','E10.311','E10.319','E10.321','E10.329','E10.331','E10.339','E10.341','E10.349','E10.351','E10.359','E10.36','E10.39','E10.40','E10.41','E10.42','E10.43','E10.44','E10.49','E10.51','E10.52','E10.59','E10.610','E10.618','E10.620','E10.621','E10.622','E10.628','E10.630','E10.638','E10.641','E10.649','E10.65','E10.69','E10.8','E10.9','E11.00','E11.01','E11.21','E11.22','E11.29','E11.311','E11.319','E11.321','E11.329','E11.331','E11.339','E11.341','E11.349','E11.351','E11.359','E11.36','E11.39','E11.40','E11.41','E11.42','E11.43','E11.44','E11.49','E11.51','E11.52','E11.59','E11.610','E11.618','E11.620','E11.621','E11.622','E11.628','E11.630','E11.638','E11.641','E11.649','E11.65','E11.69','E11.8','E11.9','O24.011','O24.012','O24.013','O24.019','O24.02','O24.03','O24.111','O24.112','O24.113','O24.119','O24.12','O24.13']},'2.16.840.1.114222.4.11.837':{'CDC Race':['2135-2','2186-5']},'2.16.840.1.113762.1.4.1':{'AdministrativeSex':['F','M','U']},'2.16.840.1.114222.4.11.836':{'CDC Race':['1002-5','2028-9','2054-5','2076-8','2106-3','2131-1']},'2.16.840.1.113883.3.560.100.4':{'LOINC':['21112-8']},'2.16.840.1.114222.4.11.3591':{'Source of Payment Typology':['1','11','111','112','113','119','12','121','122','123','129','19','2','21','211','212','213','219','22','23','24','25','29','3','31','311','3111','3112','3113','3114','3115','3116','3119','312','3121','3122','3123','313','32','321','3211','3212','32121','32122','32123','32124','32125','32126','322','3221','3222','3223','3229','33','331','332','333','334','34','341','342','343','349','35','36','361','362','369','37','371','3711','3712','3713','372','379','38','381','3811','3812','3813','3819','382','389','39','4','41','42','43','44','5','51','511','512','513','514','515','519','52','521','522','523','529','53','54','55','59','6','61','611','612','613','619','62','63','64','69','7','71','72','73','79','8','81','82','821','822','823','83','84','85','89','9','91','92','93','94','95','951','953','954','959','96','98','99','9999']},'2.16.840.1.113883.3.464.1003.101.12.1001':{'CPT':['99201','99202','99203','99204','99205','99212','99213','99214','99215']},'2.16.840.1.113883.3.464.1003.101.12.1048':{'SNOMED-CT':['12843005','18170008','185349003','185463005','185465003','19681004','207195004','270427003','270430005','308335008','390906007','406547006','439708006','87790002','90526000']},'2.16.840.1.113883.3.464.1003.101.12.1025':{'CPT':['99395','99396','99397']},'2.16.840.1.113883.3.464.1003.101.12.1023':{'CPT':['99385','99386','99387']},'2.16.840.1.113883.3.464.1003.101.12.1016':{'CPT':['99341','99342','99343','99344','99345','99347','99348','99349','99350']},'2.16.840.1.113883.3.526.3.1240':{'HCPCS':['G0438','G0439']}};\n        \n        // Measure variables\nvar MeasurePeriod = {\n  \"low\": new TS(\"201201010000\", true),\n  \"high\": new TS(\"201212312359\", true)\n}\nhqmfjs.MeasurePeriod = function(patient) {\n  return [new hQuery.CodedEntry(\n    {\n      \"start_time\": MeasurePeriod.low.asDate().getTime()/1000,\n      \"end_time\": MeasurePeriod.high.asDate().getTime()/1000,\n      \"codes\": {}\n    }\n  )];\n}\nif (typeof effective_date === 'number') {\n  MeasurePeriod.high.date = new Date(1000*effective_date);\n  // add one minute before pulling off the year.  This turns 12-31-2012 23:59 into 1-1-2013 00:00 => 1-1-2012 00:00\n  MeasurePeriod.low.date = new Date(1000*(effective_date+60));\n  MeasurePeriod.low.date.setFullYear(MeasurePeriod.low.date.getFullYear()-1);\n}\n\n// Data critera\nhqmfjs.OccurrenceADiabetes1 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"allProblems\", \"statuses\": [\"active\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.103.12.1001\", \"specificOccurrence\": \"OccurrenceADiabetes1\"};\n  var events = patient.getEvents(eventCriteria);\n  events.specificContext=new hqmf.SpecificOccurrence(Row.buildForDataCriteria(events.specific_occurrence, events))\n  return events;\n}\n\nhqmfjs.OccurrenceALdlCLaboratoryTest2 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"laboratoryTests\", \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.526.3.1248\", \"specificOccurrence\": \"OccurrenceALdlCLaboratoryTest2\"};\n  var events = patient.getEvents(eventCriteria);\n  // force a check of results for result types so that performed does not bleed into results\n  events = filterEventsByValue(events, new ANYNonNull());\n  events.specificContext=new hqmf.SpecificOccurrence(Row.buildForDataCriteria(events.specific_occurrence, events))\n  return events;\n}\n\nhqmfjs.DiagnosisActiveDiabetes = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"allProblems\", \"statuses\": [\"active\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.103.12.1001\"};\n  var events = patient.getEvents(eventCriteria);\n  hqmf.SpecificsManager.setIfNull(events);\n  return events;\n}\n\nhqmfjs.LaboratoryTestResultLdlCLaboratoryTest = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"laboratoryTests\", \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.526.3.1248\"};\n  var events = patient.getEvents(eventCriteria);\n  // force a check of results for result types so that performed does not bleed into results\n  events = filterEventsByValue(events, new ANYNonNull());\n  hqmf.SpecificsManager.setIfNull(events);\n  return events;\n}\n\nhqmfjs.PatientCharacteristicEthnicityEthnicity = function(patient, initialSpecificContext) {\n  var value = patient.ethnicity() || null;\n  matching = matchingValue(value, null);\n  matching.specificContext=hqmf.SpecificsManager.identity();\n  return matching;\n}\n\nhqmfjs.PatientCharacteristicSexOncAdministrativeSex = function(patient, initialSpecificContext) {\n  var value = patient.gender() || null;\n  matching = matchingValue(value, new CD(\"F\", \"Administrative Sex\"));\n  matching.specificContext=hqmf.SpecificsManager.identity();\n  return matching;\n}\n\nhqmfjs.PatientCharacteristicPayerPayer = function(patient, initialSpecificContext) {\n  var value = patient.payer() || null;\n  matching = matchingValue(value, null);\n  matching.specificContext=hqmf.SpecificsManager.identity();\n  return matching;\n}\n\nhqmfjs.PatientCharacteristicRaceRace = function(patient, initialSpecificContext) {\n  var value = patient.race() || null;\n  matching = new Boolean(value.includedIn({\"CDC Race\":[\"1002-5\",\"2028-9\",\"2054-5\",\"2076-8\",\"2106-3\",\"2131-1\"]}));\n  matching.specificContext=hqmf.SpecificsManager.identity();\n  return matching;\n}\n\nhqmfjs.OccurrenceADiabetes1_precondition_3 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"allProblems\", \"statuses\": [\"active\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.103.12.1001\", \"specificOccurrence\": \"OccurrenceADiabetes1\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = SBE(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.PatientCharacteristicBirthdateBirthDate_precondition_7 = function(patient, initialSpecificContext) {\n  var value = patient.birthtime() || null;\n  var events = value ? [value] : [];\n  events = SBS(events, hqmfjs.MeasurePeriod(patient), new IVL_PQ(new PQ(18, \"a\", true), null));\n  events.specificContext=events.specificContext||hqmf.SpecificsManager.identity();\n  return events;\n}\n\nhqmfjs.PatientCharacteristicBirthdateBirthDate_precondition_9 = function(patient, initialSpecificContext) {\n  var value = patient.birthtime() || null;\n  var events = value ? [value] : [];\n  events = SBS(events, hqmfjs.MeasurePeriod(patient), new IVL_PQ(null, new PQ(75, \"a\", false)));\n  events.specificContext=events.specificContext||hqmf.SpecificsManager.identity();\n  return events;\n}\n\nhqmfjs.EncounterPerformedOfficeVisit_precondition_11 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"encounters\", \"statuses\": [\"performed\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.101.12.1001\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.EncounterPerformedFaceToFaceInteraction_precondition_13 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"encounters\", \"statuses\": [\"performed\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.101.12.1048\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp_precondition_15 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"encounters\", \"statuses\": [\"performed\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.101.12.1025\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp_precondition_17 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"encounters\", \"statuses\": [\"performed\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.101.12.1023\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.EncounterPerformedHomeHealthcareServices_precondition_19 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"encounters\", \"statuses\": [\"performed\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.101.12.1016\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.EncounterPerformedAnnualWellnessVisit_precondition_21 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"encounters\", \"statuses\": [\"performed\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.526.3.1240\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.OccurrenceADiabetes1_precondition_5 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"allProblems\", \"statuses\": [\"active\"], \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.464.1003.103.12.1001\", \"specificOccurrence\": \"OccurrenceADiabetes1\"};\n  var events = patient.getEvents(eventCriteria);\n  if (events.length > 0 || !Logger.short_circuit) events = EBS(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  return events;\n}\n\nhqmfjs.OccurrenceALdlCLaboratoryTest2_precondition_28 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"laboratoryTests\", \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.526.3.1248\", \"specificOccurrence\": \"OccurrenceALdlCLaboratoryTest2\"};\n  var events = patient.getEvents(eventCriteria);\n  // force a check of results for result types so that performed does not bleed into results\n  events = filterEventsByValue(events, new ANYNonNull());\n  if (events.length > 0 || !Logger.short_circuit) events = DURING(events, hqmfjs.MeasurePeriod(patient));\n  if (events.length == 0) events.specificContext=hqmf.SpecificsManager.empty();\n  events = RECENT(events, initialSpecificContext);\n  return events;\n}\n\nhqmfjs.OccurrenceALdlCLaboratoryTest2_precondition_31 = function(patient, initialSpecificContext) {\n  var eventCriteria = {\"type\": \"laboratoryTests\", \"includeEventsWithoutStatus\": true, \"valueSetId\": \"2.16.840.1.113883.3.526.3.1248\", \"specificOccurrence\": \"OccurrenceALdlCLaboratoryTest2\"};\n  var events = patient.getEvents(eventCriteria);\n  events = filterEventsByValue(events, new IVL_PQ(null, new PQ(100, \"mg/dL\", false)));\n  events.specificContext=new hqmf.SpecificOccurrence(Row.buildForDataCriteria(events.specific_occurrence, events))\n  return events;\n}\n\n\n\n        // #########################\n        // ##### MEASURE LOGIC #####\n        // #########################\n        \n        hqmfjs.initializeSpecifics = function(patient_api, hqmfjs) { hqmf.SpecificsManager.initialize(patient_api,hqmfjs,{\"id\":\"OccurrenceADiabetes1\",\"type\":\"DIAGNOSIS_ACTIVE_DIABETES\",\"function\":\"OccurrenceADiabetes1\"},{\"id\":\"OccurrenceALdlCLaboratoryTest2\",\"type\":\"LABORATORY_TEST_LDL_C_LABORATORY_TEST\",\"function\":\"OccurrenceALdlCLaboratoryTest2\"}) }\n\n        // INITIAL PATIENT POPULATION\n        hqmfjs.IPP = function(patient, initialSpecificContext) {\n  population_criteria_fn = allTrue('IPP', patient, initialSpecificContext,\n    allTrue('27', patient, initialSpecificContext, hqmfjs.OccurrenceADiabetes1_precondition_3, hqmfjs.PatientCharacteristicBirthdateBirthDate_precondition_7, hqmfjs.PatientCharacteristicBirthdateBirthDate_precondition_9,\n      atLeastOneTrue('23', patient, initialSpecificContext, hqmfjs.EncounterPerformedOfficeVisit_precondition_11, hqmfjs.EncounterPerformedFaceToFaceInteraction_precondition_13, hqmfjs.EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp_precondition_15, hqmfjs.EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp_precondition_17, hqmfjs.EncounterPerformedHomeHealthcareServices_precondition_19, hqmfjs.EncounterPerformedAnnualWellnessVisit_precondition_21\n      ),\n      allFalse('26', patient, initialSpecificContext, hqmfjs.OccurrenceADiabetes1_precondition_5\n      )\n    )\n  );\n  if (typeof(population_criteria_fn) == 'function') {\n  \treturn population_criteria_fn();\n  } else {\n  \treturn population_criteria_fn;\n  }\n};\n\n\n        // STRATIFICATION\n        hqmfjs.STRAT=null;\n        // DENOMINATOR\n        hqmfjs.DENOM = function(patient) { return new Boolean(true); }\n        // NUMERATOR\n        hqmfjs.NUMER = function(patient, initialSpecificContext) {\n  population_criteria_fn = allTrue('NUMER', patient, initialSpecificContext,\n    allTrue('33', patient, initialSpecificContext, hqmfjs.OccurrenceALdlCLaboratoryTest2_precondition_28, hqmfjs.OccurrenceALdlCLaboratoryTest2_precondition_31\n    )\n  );\n  if (typeof(population_criteria_fn) == 'function') {\n  \treturn population_criteria_fn();\n  } else {\n  \treturn population_criteria_fn;\n  }\n};\n\n\n        hqmfjs.DENEX = function(patient) { return new Boolean(false); }\n        hqmfjs.DENEXCEP = function(patient) { return new Boolean(false); }\n        // CV\n        hqmfjs.MSRPOPL = function(patient) { return new Boolean(false); }\n        hqmfjs.OBSERV = function(patient) { return new Boolean(false); }\n        \n        \n        var occurrenceId = null;\n\n        hqmfjs.initializeSpecifics(patient_api, hqmfjs)\n        \n        var population = function() {\n          return executeIfAvailable(hqmfjs.IPP, patient_api);\n        }\n        var stratification = null;\n        if (hqmfjs.STRAT) {\n          stratification = function() {\n            return hqmf.SpecificsManager.setIfNull(executeIfAvailable(hqmfjs.STRAT, patient_api));\n          }\n        }\n        var denominator = function() {\n          return executeIfAvailable(hqmfjs.DENOM, patient_api);\n        }\n        var numerator = function() {\n          return executeIfAvailable(hqmfjs.NUMER, patient_api);\n        }\n        var exclusion = function() {\n          return executeIfAvailable(hqmfjs.DENEX, patient_api);\n        }\n        var denexcep = function() {\n          return executeIfAvailable(hqmfjs.DENEXCEP, patient_api);\n        }\n        var msrpopl = function() {\n          return executeIfAvailable(hqmfjs.MSRPOPL, patient_api);\n        }\n        var observ = function(specific_context) {\n          \n          var observFunc = hqmfjs.OBSERV\n          if (typeof(observFunc)==='function')\n            return observFunc(patient_api, specific_context);\n          else\n            return [];\n        }\n        \n        var executeIfAvailable = function(optionalFunction, patient_api) {\n          if (typeof(optionalFunction)==='function') {\n            result = optionalFunction(patient_api);\n            \n            return result;\n          } else {\n            return false;\n          }\n        }\n\n        \n        if (typeof Logger != 'undefined') {\n          // clear out logger\n          Logger.logger = [];\n          Logger.rationale={};\n          if (typeof short_circuit == 'undefined') short_circuit = true;\n        \n          // turn on logging if it is enabled\n          if (enable_logging || enable_rationale) {\n            injectLogger(hqmfjs, enable_logging, enable_rationale, short_circuit);\n          } else {\n            Logger.enable_rationale = false;\n          }\n        }\n\n        try {\n          map(patient, population, denominator, numerator, exclusion, denexcep, msrpopl, observ, occurrenceId,false,stratification);\n        } catch(err) {\n          print(err.stack);\n          throw err;\n        }\n\n        \n        };\n        ",
  "continuous_variable": false,
  "episode_of_care": false,
  "hqmf_document": {
    "id": "0064",
    "hqmf_id": "40280381-4600-425F-0146-1F68661E0ED5",
    "hqmf_set_id": "0DAC1DEC-E011-493B-A281-7C28964872DD",
    "hqmf_version_number": 3,
    "title": "Diabetes: Low Density Lipoprotein (LDL) Management",
    "description": "Percentage of patients 18–75 years of age with diabetes whose LDL-C was adequately controlled (<100 mg/dL) during the measurement period.",
    "cms_id": "CMS163v3",
    "population_criteria": {
      "IPP": {
        "conjunction?": true,
        "type": "IPP",
        "title": "Initial Patient Population",
        "hqmf_id": "03E78AA2-C493-45AB-BE96-78449C05828C",
        "preconditions": [
          {
            "id": 27,
            "preconditions": [
              {
                "id": 3,
                "reference": "OccurrenceADiabetes1_precondition_3"
              },
              {
                "id": 7,
                "reference": "PatientCharacteristicBirthdateBirthDate_precondition_7"
              },
              {
                "id": 9,
                "reference": "PatientCharacteristicBirthdateBirthDate_precondition_9"
              },
              {
                "id": 23,
                "preconditions": [
                  {
                    "id": 11,
                    "reference": "EncounterPerformedOfficeVisit_precondition_11"
                  },
                  {
                    "id": 13,
                    "reference": "EncounterPerformedFaceToFaceInteraction_precondition_13"
                  },
                  {
                    "id": 15,
                    "reference": "EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp_precondition_15"
                  },
                  {
                    "id": 17,
                    "reference": "EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp_precondition_17"
                  },
                  {
                    "id": 19,
                    "reference": "EncounterPerformedHomeHealthcareServices_precondition_19"
                  },
                  {
                    "id": 21,
                    "reference": "EncounterPerformedAnnualWellnessVisit_precondition_21"
                  }
                ],
                "conjunction_code": "atLeastOneTrue"
              },
              {
                "id": 26,
                "preconditions": [
                  {
                    "id": 5,
                    "reference": "OccurrenceADiabetes1_precondition_5"
                  }
                ],
                "conjunction_code": "atLeastOneTrue",
                "negation": true
              }
            ],
            "conjunction_code": "allTrue"
          }
        ]
      },
      "DENOM": {
        "conjunction?": true,
        "type": "DENOM",
        "title": "Denominator",
        "hqmf_id": "1A75D0C6-9F0E-47E4-8041-473B9053416B"
      },
      "NUMER": {
        "conjunction?": true,
        "type": "NUMER",
        "title": "Numerator",
        "hqmf_id": "11AAA5F5-C6EB-41D9-9323-30295D244C46",
        "preconditions": [
          {
            "id": 33,
            "preconditions": [
              {
                "id": 29,
                "reference": "OccurrenceALdlCLaboratoryTest2_precondition_28"
              },
              {
                "id": 31,
                "reference": "OccurrenceALdlCLaboratoryTest2_precondition_31"
              }
            ],
            "conjunction_code": "allTrue"
          }
        ]
      }
    },
    "data_criteria": {
      "DiagnosisActiveDiabetes": {
        "title": "Diabetes",
        "description": "Diagnosis, Active: Diabetes",
        "code_list_id": "2.16.840.1.113883.3.464.1003.103.12.1001",
        "type": "conditions",
        "definition": "diagnosis",
        "status": "active",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "DiagnosisActiveDiabetes",
        "variable": false
      },
      "LaboratoryTestResultLdlCLaboratoryTest": {
        "title": "LDL-C Laboratory Test",
        "description": "Laboratory Test, Result: LDL-C Laboratory Test",
        "code_list_id": "2.16.840.1.113883.3.526.3.1248",
        "type": "laboratory_tests",
        "definition": "laboratory_test",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "LaboratoryTestResultLdlCLaboratoryTest",
        "variable": false
      },
      "PatientCharacteristicEthnicityEthnicity": {
        "title": "Ethnicity",
        "description": "Patient Characteristic Ethnicity: Ethnicity",
        "code_list_id": "2.16.840.1.114222.4.11.837",
        "property": "ethnicity",
        "type": "characteristic",
        "definition": "patient_characteristic_ethnicity",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicEthnicityEthnicity",
        "variable": false,
        "inline_code_list": {
          "CDC Race": [
            "2135-2",
            "2186-5"
          ]
        }
      },
      "PatientCharacteristicSexOncAdministrativeSex": {
        "title": "ONC Administrative Sex",
        "description": "Patient Characteristic Sex: ONC Administrative Sex",
        "code_list_id": "2.16.840.1.113762.1.4.1",
        "property": "gender",
        "type": "characteristic",
        "definition": "patient_characteristic_gender",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicSexOncAdministrativeSex",
        "variable": false,
        "value": {
          "type": "CD",
          "system": "Administrative Sex",
          "code": "F"
        }
      },
      "PatientCharacteristicPayerPayer": {
        "title": "Payer",
        "description": "Patient Characteristic Payer: Payer",
        "code_list_id": "2.16.840.1.114222.4.11.3591",
        "property": "payer",
        "type": "characteristic",
        "definition": "patient_characteristic_payer",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicPayerPayer",
        "variable": false,
        "inline_code_list": {
          "Source of Payment Typology": [
            "1",
            "11",
            "111",
            "112",
            "113",
            "119",
            "12",
            "121",
            "122",
            "123",
            "129",
            "19",
            "2",
            "21",
            "211",
            "212",
            "213",
            "219",
            "22",
            "23",
            "24",
            "25",
            "29",
            "3",
            "31",
            "311",
            "3111",
            "3112",
            "3113",
            "3114",
            "3115",
            "3116",
            "3119",
            "312",
            "3121",
            "3122",
            "3123",
            "313",
            "32",
            "321",
            "3211",
            "3212",
            "32121",
            "32122",
            "32123",
            "32124",
            "32125",
            "32126",
            "322",
            "3221",
            "3222",
            "3223",
            "3229",
            "33",
            "331",
            "332",
            "333",
            "334",
            "34",
            "341",
            "342",
            "343",
            "349",
            "35",
            "36",
            "361",
            "362",
            "369",
            "37",
            "371",
            "3711",
            "3712",
            "3713",
            "372",
            "379",
            "38",
            "381",
            "3811",
            "3812",
            "3813",
            "3819",
            "382",
            "389",
            "39",
            "4",
            "41",
            "42",
            "43",
            "44",
            "5",
            "51",
            "511",
            "512",
            "513",
            "514",
            "515",
            "519",
            "52",
            "521",
            "522",
            "523",
            "529",
            "53",
            "54",
            "55",
            "59",
            "6",
            "61",
            "611",
            "612",
            "613",
            "619",
            "62",
            "63",
            "64",
            "69",
            "7",
            "71",
            "72",
            "73",
            "79",
            "8",
            "81",
            "82",
            "821",
            "822",
            "823",
            "83",
            "84",
            "85",
            "89",
            "9",
            "91",
            "92",
            "93",
            "94",
            "95",
            "951",
            "953",
            "954",
            "959",
            "96",
            "98",
            "99",
            "9999"
          ]
        }
      },
      "PatientCharacteristicRaceRace": {
        "title": "Race",
        "description": "Patient Characteristic Race: Race",
        "code_list_id": "2.16.840.1.114222.4.11.836",
        "property": "race",
        "type": "characteristic",
        "definition": "patient_characteristic_race",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicRaceRace",
        "variable": false,
        "inline_code_list": {
          "CDC Race": [
            "1002-5",
            "2028-9",
            "2054-5",
            "2076-8",
            "2106-3",
            "2131-1"
          ]
        }
      },
      "OccurrenceADiabetes1_precondition_3": {
        "title": "Diabetes",
        "description": "Diagnosis, Active: Diabetes",
        "code_list_id": "2.16.840.1.113883.3.464.1003.103.12.1001",
        "type": "conditions",
        "definition": "diagnosis",
        "status": "active",
        "hard_status": false,
        "negation": false,
        "specific_occurrence": "A",
        "specific_occurrence_const": "DIAGNOSIS_ACTIVE_DIABETES",
        "source_data_criteria": "OccurrenceADiabetes1",
        "variable": false,
        "temporal_references": [
          {
            "type": "SBE",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "PatientCharacteristicBirthdateBirthDate_precondition_7": {
        "title": "birth date",
        "description": "Patient Characteristic Birthdate: birth date",
        "code_list_id": "2.16.840.1.113883.3.560.100.4",
        "property": "birthtime",
        "type": "characteristic",
        "definition": "patient_characteristic_birthdate",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicBirthdateBirthDate",
        "variable": false,
        "inline_code_list": {
          "LOINC": [
            "21112-8"
          ]
        },
        "temporal_references": [
          {
            "type": "SBS",
            "reference": "MeasurePeriod",
            "range": {
              "type": "IVL_PQ",
              "low": {
                "type": "PQ",
                "unit": "a",
                "value": "18",
                "inclusive?": true,
                "derived?": false
              }
            }
          }
        ]
      },
      "PatientCharacteristicBirthdateBirthDate_precondition_9": {
        "title": "birth date",
        "description": "Patient Characteristic Birthdate: birth date",
        "code_list_id": "2.16.840.1.113883.3.560.100.4",
        "property": "birthtime",
        "type": "characteristic",
        "definition": "patient_characteristic_birthdate",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicBirthdateBirthDate",
        "variable": false,
        "inline_code_list": {
          "LOINC": [
            "21112-8"
          ]
        },
        "temporal_references": [
          {
            "type": "SBS",
            "reference": "MeasurePeriod",
            "range": {
              "type": "IVL_PQ",
              "high": {
                "type": "PQ",
                "unit": "a",
                "value": "75",
                "inclusive?": false,
                "derived?": false
              }
            }
          }
        ]
      },
      "EncounterPerformedOfficeVisit_precondition_11": {
        "title": "Office Visit",
        "description": "Encounter, Performed: Office Visit",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1001",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedOfficeVisit",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "EncounterPerformedFaceToFaceInteraction_precondition_13": {
        "title": "Face-to-Face Interaction",
        "description": "Encounter, Performed: Face-to-Face Interaction",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1048",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedFaceToFaceInteraction",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp_precondition_15": {
        "title": "Preventive Care Services - Established Office Visit, 18 and Up",
        "description": "Encounter, Performed: Preventive Care Services - Established Office Visit, 18 and Up",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1025",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp_precondition_17": {
        "title": "Preventive Care Services-Initial Office Visit, 18 and Up",
        "description": "Encounter, Performed: Preventive Care Services-Initial Office Visit, 18 and Up",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1023",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "EncounterPerformedHomeHealthcareServices_precondition_19": {
        "title": "Home Healthcare Services",
        "description": "Encounter, Performed: Home Healthcare Services",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1016",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedHomeHealthcareServices",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "EncounterPerformedAnnualWellnessVisit_precondition_21": {
        "title": "Annual Wellness Visit",
        "description": "Encounter, Performed: Annual Wellness Visit",
        "code_list_id": "2.16.840.1.113883.3.526.3.1240",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedAnnualWellnessVisit",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "OccurrenceADiabetes1_precondition_5": {
        "title": "Diabetes",
        "description": "Diagnosis, Active: Diabetes",
        "code_list_id": "2.16.840.1.113883.3.464.1003.103.12.1001",
        "type": "conditions",
        "definition": "diagnosis",
        "status": "active",
        "hard_status": false,
        "negation": false,
        "specific_occurrence": "A",
        "specific_occurrence_const": "DIAGNOSIS_ACTIVE_DIABETES",
        "source_data_criteria": "OccurrenceADiabetes1",
        "variable": false,
        "temporal_references": [
          {
            "type": "EBS",
            "reference": "MeasurePeriod"
          }
        ]
      },
      "OccurrenceALdlCLaboratoryTest2_precondition_28": {
        "title": "LDL-C Laboratory Test",
        "description": "Laboratory Test: LDL-C Laboratory Test",
        "code_list_id": "2.16.840.1.113883.3.526.3.1248",
        "type": "laboratory_tests",
        "definition": "laboratory_test",
        "hard_status": false,
        "negation": false,
        "specific_occurrence": "A",
        "specific_occurrence_const": "LABORATORY_TEST_LDL_C_LABORATORY_TEST",
        "source_data_criteria": "OccurrenceALdlCLaboratoryTest2",
        "variable": false,
        "temporal_references": [
          {
            "type": "DURING",
            "reference": "MeasurePeriod"
          }
        ],
        "subset_operators": [
          {
            "type": "RECENT"
          }
        ]
      },
      "OccurrenceALdlCLaboratoryTest2_precondition_31": {
        "title": "LDL-C Laboratory Test",
        "description": "Laboratory Test: LDL-C Laboratory Test",
        "code_list_id": "2.16.840.1.113883.3.526.3.1248",
        "type": "laboratory_tests",
        "definition": "laboratory_test",
        "hard_status": false,
        "negation": false,
        "specific_occurrence": "A",
        "specific_occurrence_const": "LABORATORY_TEST_LDL_C_LABORATORY_TEST",
        "source_data_criteria": "OccurrenceALdlCLaboratoryTest2",
        "variable": false,
        "value": {
          "type": "IVL_PQ",
          "high": {
            "type": "PQ",
            "unit": "mg/dL",
            "value": "100",
            "inclusive?": false,
            "derived?": false
          }
        }
      }
    },
    "source_data_criteria": {
      "EncounterPerformedAnnualWellnessVisit": {
        "title": "Annual Wellness Visit",
        "description": "Encounter, Performed: Annual Wellness Visit",
        "code_list_id": "2.16.840.1.113883.3.526.3.1240",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedAnnualWellnessVisit",
        "variable": false
      },
      "PatientCharacteristicBirthdateBirthDate": {
        "title": "birth date",
        "description": "Patient Characteristic Birthdate: birth date",
        "code_list_id": "2.16.840.1.113883.3.560.100.4",
        "property": "birthtime",
        "type": "characteristic",
        "definition": "patient_characteristic_birthdate",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicBirthdateBirthDate",
        "variable": false,
        "inline_code_list": {
          "LOINC": [
            "21112-8"
          ]
        }
      },
      "OccurrenceADiabetes1": {
        "title": "Diabetes",
        "description": "Diagnosis, Active: Diabetes",
        "code_list_id": "2.16.840.1.113883.3.464.1003.103.12.1001",
        "type": "conditions",
        "definition": "diagnosis",
        "status": "active",
        "hard_status": false,
        "negation": false,
        "specific_occurrence": "A",
        "specific_occurrence_const": "DIAGNOSIS_ACTIVE_DIABETES",
        "source_data_criteria": "OccurrenceADiabetes1",
        "variable": false
      },
      "EncounterPerformedFaceToFaceInteraction": {
        "title": "Face-to-Face Interaction",
        "description": "Encounter, Performed: Face-to-Face Interaction",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1048",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedFaceToFaceInteraction",
        "variable": false
      },
      "EncounterPerformedHomeHealthcareServices": {
        "title": "Home Healthcare Services",
        "description": "Encounter, Performed: Home Healthcare Services",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1016",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedHomeHealthcareServices",
        "variable": false
      },
      "OccurrenceALdlCLaboratoryTest2": {
        "title": "LDL-C Laboratory Test",
        "description": "Laboratory Test: LDL-C Laboratory Test",
        "code_list_id": "2.16.840.1.113883.3.526.3.1248",
        "type": "laboratory_tests",
        "definition": "laboratory_test",
        "hard_status": false,
        "negation": false,
        "specific_occurrence": "A",
        "specific_occurrence_const": "LABORATORY_TEST_LDL_C_LABORATORY_TEST",
        "source_data_criteria": "OccurrenceALdlCLaboratoryTest2",
        "variable": false
      },
      "EncounterPerformedOfficeVisit": {
        "title": "Office Visit",
        "description": "Encounter, Performed: Office Visit",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1001",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedOfficeVisit",
        "variable": false
      },
      "EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp": {
        "title": "Preventive Care Services - Established Office Visit, 18 and Up",
        "description": "Encounter, Performed: Preventive Care Services - Established Office Visit, 18 and Up",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1025",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedPreventiveCareServicesEstablishedOfficeVisit18AndUp",
        "variable": false
      },
      "EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp": {
        "title": "Preventive Care Services-Initial Office Visit, 18 and Up",
        "description": "Encounter, Performed: Preventive Care Services-Initial Office Visit, 18 and Up",
        "code_list_id": "2.16.840.1.113883.3.464.1003.101.12.1023",
        "type": "encounters",
        "definition": "encounter",
        "status": "performed",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "EncounterPerformedPreventiveCareServicesInitialOfficeVisit18AndUp",
        "variable": false
      },
      "DiagnosisActiveDiabetes": {
        "title": "Diabetes",
        "description": "Diagnosis, Active: Diabetes",
        "code_list_id": "2.16.840.1.113883.3.464.1003.103.12.1001",
        "type": "conditions",
        "definition": "diagnosis",
        "status": "active",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "DiagnosisActiveDiabetes",
        "variable": false
      },
      "LaboratoryTestResultLdlCLaboratoryTest": {
        "title": "LDL-C Laboratory Test",
        "description": "Laboratory Test, Result: LDL-C Laboratory Test",
        "code_list_id": "2.16.840.1.113883.3.526.3.1248",
        "type": "laboratory_tests",
        "definition": "laboratory_test",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "LaboratoryTestResultLdlCLaboratoryTest",
        "variable": false
      },
      "PatientCharacteristicEthnicityEthnicity": {
        "title": "Ethnicity",
        "description": "Patient Characteristic Ethnicity: Ethnicity",
        "code_list_id": "2.16.840.1.114222.4.11.837",
        "property": "ethnicity",
        "type": "characteristic",
        "definition": "patient_characteristic_ethnicity",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicEthnicityEthnicity",
        "variable": false,
        "inline_code_list": {
          "CDC Race": [
            "2135-2",
            "2186-5"
          ]
        }
      },
      "PatientCharacteristicSexOncAdministrativeSex": {
        "title": "ONC Administrative Sex",
        "description": "Patient Characteristic Sex: ONC Administrative Sex",
        "code_list_id": "2.16.840.1.113762.1.4.1",
        "property": "gender",
        "type": "characteristic",
        "definition": "patient_characteristic_gender",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicSexOncAdministrativeSex",
        "variable": false,
        "value": {
          "type": "CD",
          "system": "Administrative Sex",
          "code": "F"
        }
      },
      "PatientCharacteristicPayerPayer": {
        "title": "Payer",
        "description": "Patient Characteristic Payer: Payer",
        "code_list_id": "2.16.840.1.114222.4.11.3591",
        "property": "payer",
        "type": "characteristic",
        "definition": "patient_characteristic_payer",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicPayerPayer",
        "variable": false,
        "inline_code_list": {
          "Source of Payment Typology": [
            "1",
            "11",
            "111",
            "112",
            "113",
            "119",
            "12",
            "121",
            "122",
            "123",
            "129",
            "19",
            "2",
            "21",
            "211",
            "212",
            "213",
            "219",
            "22",
            "23",
            "24",
            "25",
            "29",
            "3",
            "31",
            "311",
            "3111",
            "3112",
            "3113",
            "3114",
            "3115",
            "3116",
            "3119",
            "312",
            "3121",
            "3122",
            "3123",
            "313",
            "32",
            "321",
            "3211",
            "3212",
            "32121",
            "32122",
            "32123",
            "32124",
            "32125",
            "32126",
            "322",
            "3221",
            "3222",
            "3223",
            "3229",
            "33",
            "331",
            "332",
            "333",
            "334",
            "34",
            "341",
            "342",
            "343",
            "349",
            "35",
            "36",
            "361",
            "362",
            "369",
            "37",
            "371",
            "3711",
            "3712",
            "3713",
            "372",
            "379",
            "38",
            "381",
            "3811",
            "3812",
            "3813",
            "3819",
            "382",
            "389",
            "39",
            "4",
            "41",
            "42",
            "43",
            "44",
            "5",
            "51",
            "511",
            "512",
            "513",
            "514",
            "515",
            "519",
            "52",
            "521",
            "522",
            "523",
            "529",
            "53",
            "54",
            "55",
            "59",
            "6",
            "61",
            "611",
            "612",
            "613",
            "619",
            "62",
            "63",
            "64",
            "69",
            "7",
            "71",
            "72",
            "73",
            "79",
            "8",
            "81",
            "82",
            "821",
            "822",
            "823",
            "83",
            "84",
            "85",
            "89",
            "9",
            "91",
            "92",
            "93",
            "94",
            "95",
            "951",
            "953",
            "954",
            "959",
            "96",
            "98",
            "99",
            "9999"
          ]
        }
      },
      "PatientCharacteristicRaceRace": {
        "title": "Race",
        "description": "Patient Characteristic Race: Race",
        "code_list_id": "2.16.840.1.114222.4.11.836",
        "property": "race",
        "type": "characteristic",
        "definition": "patient_characteristic_race",
        "hard_status": false,
        "negation": false,
        "source_data_criteria": "PatientCharacteristicRaceRace",
        "variable": false,
        "inline_code_list": {
          "CDC Race": [
            "1002-5",
            "2028-9",
            "2054-5",
            "2076-8",
            "2106-3",
            "2131-1"
          ]
        }
      }
    },
    "attributes": [
      {
        "code": "OTH",
        "name": "Finalized Date/Time",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "Finalized Date/Time"
        },
        "value_obj": {
          "type": "TS"
        }
      },
      {
        "code": "COPY",
        "value": "Physician Performance Measure (Measures) and related data specifications were developed by the National Committee for Quality Assurance (NCQA). \r\n\r\nThe Measures are copyrighted but can be reproduced and distributed, without modification, for noncommercial purposes (eg, use by healthcare providers in connection with their practices). Commercial use is defined as the sale, licensing, or distribution of the Measures for commercial gain, or incorporation of the Measures into a product or service that is sold, licensed or distributed for commercial gain. Commercial use of the Measures requires a license agreement between the user and NCQA. NCQA is not responsible for any use of the Measures. \r\n\r\n(c) 2008 -2014 National Committee for Quality Assurance. All Rights Reserved. \r\n\r\nLimited proprietary coding is contained in the Measure specifications for user convenience. Users of proprietary code sets should obtain all necessary licenses from the owners of the code sets.  NCQA disclaims all liability for use or accuracy of any CPT or other codes contained in the specifications.\r\n\r\nCPT(R) contained in the Measure specifications is copyright 2004-2013 American Medical Association. LOINC(R) copyright 2004-2013 Regenstrief Institute, Inc. This material contains SNOMED Clinical Terms(R) (SNOMED CT[R]) copyright 2004-2013 International Health Terminology Standards Development Organization. ICD-10 copyright 2013 World Health Organization. All Rights Reserved.",
        "name": "Copyright",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "COPY",
          "title": "Copyright"
        },
        "value_obj": {
          "type": "ED",
          "value": "Physician Performance Measure (Measures) and related data specifications were developed by the National Committee for Quality Assurance (NCQA). \r\n\r\nThe Measures are copyrighted but can be reproduced and distributed, without modification, for noncommercial purposes (eg, use by healthcare providers in connection with their practices). Commercial use is defined as the sale, licensing, or distribution of the Measures for commercial gain, or incorporation of the Measures into a product or service that is sold, licensed or distributed for commercial gain. Commercial use of the Measures requires a license agreement between the user and NCQA. NCQA is not responsible for any use of the Measures. \r\n\r\n(c) 2008 -2014 National Committee for Quality Assurance. All Rights Reserved. \r\n\r\nLimited proprietary coding is contained in the Measure specifications for user convenience. Users of proprietary code sets should obtain all necessary licenses from the owners of the code sets.  NCQA disclaims all liability for use or accuracy of any CPT or other codes contained in the specifications.\r\n\r\nCPT(R) contained in the Measure specifications is copyright 2004-2013 American Medical Association. LOINC(R) copyright 2004-2013 Regenstrief Institute, Inc. This material contains SNOMED Clinical Terms(R) (SNOMED CT[R]) copyright 2004-2013 International Health Terminology Standards Development Organization. ICD-10 copyright 2013 World Health Organization. All Rights Reserved.",
          "media_type": "text/plain"
        }
      },
      {
        "code": "MSRSCORE",
        "name": "Measure Scoring",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "MSRSCORE",
          "title": "Measure Scoring"
        },
        "value_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.1.11.20367",
          "code": "PROPOR",
          "title": "Proportion"
        }
      },
      {
        "code": "MSRTYPE",
        "name": "Measure Type",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "MSRTYPE",
          "title": "Measure Type"
        },
        "value_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.1.11.20368",
          "code": "OUTCOME",
          "title": "Outcome"
        }
      },
      {
        "code": "STRAT",
        "value": "None",
        "name": "Stratification",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "STRAT",
          "title": "Stratification"
        },
        "value_obj": {
          "type": "ED",
          "value": "None",
          "media_type": "text/plain"
        }
      },
      {
        "code": "MSRADJ",
        "value": "None",
        "name": "Risk Adjustment",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "MSRADJ",
          "title": "Risk Adjustment"
        },
        "value_obj": {
          "type": "ED",
          "value": "None",
          "media_type": "text/plain"
        }
      },
      {
        "code": "MSRAGG",
        "value": "None",
        "name": "Rate Aggregation",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "MSRAGG",
          "title": "Rate Aggregation"
        },
        "value_obj": {
          "type": "ED",
          "value": "None",
          "media_type": "text/plain"
        }
      },
      {
        "code": "RAT",
        "value": "Diabetes mellitus (diabetes) is a group of diseases characterized by high blood glucose levels caused by the body’s inability to correctly produce or utilize the hormone insulin. It is recognized as a leading cause of death and disability in the U.S. and is highly underreported as a cause of death. Diabetes may cause life-threatening, life-ending or life-altering complications, including poor cholesterol, specifically lipoprotein (LDL). Clinical guidelines recommend lifestyle modifications that include reducing intake of saturated fat, trans fat and cholesterol; weight loss; and increased physical activity (American Diabetes Association 2009). Statin therapy is suggested for eligible patients whose levels are consistently and significantly higher (American Diabetes Association 2009).",
        "name": "Rationale",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "RAT",
          "title": "Rationale"
        },
        "value_obj": {
          "type": "ED",
          "value": "Diabetes mellitus (diabetes) is a group of diseases characterized by high blood glucose levels caused by the body’s inability to correctly produce or utilize the hormone insulin. It is recognized as a leading cause of death and disability in the U.S. and is highly underreported as a cause of death. Diabetes may cause life-threatening, life-ending or life-altering complications, including poor cholesterol, specifically lipoprotein (LDL). Clinical guidelines recommend lifestyle modifications that include reducing intake of saturated fat, trans fat and cholesterol; weight loss; and increased physical activity (American Diabetes Association 2009). Statin therapy is suggested for eligible patients whose levels are consistently and significantly higher (American Diabetes Association 2009).",
          "media_type": "text/plain"
        }
      },
      {
        "code": "CRS",
        "value": "American Diabetes Association (2009): In most adult patients, measure fasting lipid profile at least annually. In adults with low-risk lipid values (LDL cholesterol < 100 mg/dl, HDL cholesterol > 50 mg/dl, and triglycerides < 150 mg/dl), lipid assessments may be repeated every 2 years.\r\n                \r\nAmerican Association of Clinical Endocrinologists (2007): Aggressive management of dyslipidemia in patients with diabetes mellitus is critical; treat patients to achieve the following goal: LDL-C < 100 mg/dL (< 70 mg/dL is recommended for patients with diabetes mellitus and coronary artery disease).",
        "name": "Clinical Recommendation Statement",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.3.560",
          "code": "CRS",
          "title": "Clinical Recommendation Statement"
        },
        "value_obj": {
          "type": "ED",
          "value": "American Diabetes Association (2009): In most adult patients, measure fasting lipid profile at least annually. In adults with low-risk lipid values (LDL cholesterol < 100 mg/dl, HDL cholesterol > 50 mg/dl, and triglycerides < 150 mg/dl), lipid assessments may be repeated every 2 years.\r\n                \r\nAmerican Association of Clinical Endocrinologists (2007): Aggressive management of dyslipidemia in patients with diabetes mellitus is critical; treat patients to achieve the following goal: LDL-C < 100 mg/dL (< 70 mg/dL is recommended for patients with diabetes mellitus and coronary artery disease).",
          "media_type": "text/plain"
        }
      },
      {
        "code": "IDUR",
        "value": "Higher score indicates better quality",
        "name": "Improvement Notation",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.3.560",
          "code": "IDUR",
          "title": "Improvement Notation"
        },
        "value_obj": {
          "type": "ED",
          "value": "Higher score indicates better quality",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "0064",
        "name": "NQF ID Number",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "NQF ID Number"
        },
        "value_obj": {
          "type": "II",
          "root": "2.16.840.1.113883.3.560.1",
          "extension": "0064"
        }
      },
      {
        "code": "DISC",
        "value": "These performance Measures are not clinical guidelines and do not establish a standard of medical care, and have not been tested for all potential applications.\r\n\r\nTHE MEASURES AND SPECIFICATIONS ARE PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND.\r\n \r\nDue to technical limitations, registered trademarks are indicated by (R) or [R] and unregistered trademarks are indicated by (TM) or [TM].",
        "name": "Disclaimer",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "DISC",
          "title": "Disclaimer",
          "original_text": "Disclaimer"
        },
        "value_obj": {
          "type": "ED",
          "value": "These performance Measures are not clinical guidelines and do not establish a standard of medical care, and have not been tested for all potential applications.\r\n\r\nTHE MEASURES AND SPECIFICATIONS ARE PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND.\r\n \r\nDue to technical limitations, registered trademarks are indicated by (R) or [R] and unregistered trademarks are indicated by (TM) or [TM].",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "163",
        "name": "eMeasure Identifier",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "eMeasure Identifier"
        },
        "value_obj": {
          "type": "ED",
          "value": "163",
          "media_type": "text/plain"
        }
      },
      {
        "code": "REF",
        "value": "American Association of Clinical Endocrinologists. 2007. “Medical Guidelines for Clinical Practice for the Management of Diabetes Mellitus.” Endocr Pract 13(Suppl 1):4-68.",
        "name": "Reference",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "REF",
          "title": "Reference"
        },
        "value_obj": {
          "type": "ED",
          "value": "American Association of Clinical Endocrinologists. 2007. “Medical Guidelines for Clinical Practice for the Management of Diabetes Mellitus.” Endocr Pract 13(Suppl 1):4-68.",
          "media_type": "text/plain"
        }
      },
      {
        "code": "DEF",
        "value": "None",
        "name": "Definition",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.3.560",
          "code": "DEF",
          "title": "Definition"
        },
        "value_obj": {
          "type": "ED",
          "value": "None",
          "media_type": "text/plain"
        }
      },
      {
        "code": "GUIDE",
        "value": "The patient is not numerator compliant if the result for the most recent LDL-C test during the measurement period is >= 100 mg/dL, or is missing, or if an LDL-C test was not performed during the measurement period. \r\n\r\nOnly patients with a diagnosis of Type 1 or Type 2 diabetes should be included in the denominator of this measure; patients with a diagnosis of secondary diabetes due to another condition should not be included.",
        "name": "Guidance",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.4",
          "code": "GUIDE",
          "title": "Guidance"
        },
        "value_obj": {
          "type": "ED",
          "value": "The patient is not numerator compliant if the result for the most recent LDL-C test during the measurement period is >= 100 mg/dL, or is missing, or if an LDL-C test was not performed during the measurement period. \r\n\r\nOnly patients with a diagnosis of Type 1 or Type 2 diabetes should be included in the denominator of this measure; patients with a diagnosis of secondary diabetes due to another condition should not be included.",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "TBD",
        "name": "Transmission Format",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "Transmission Format"
        },
        "value_obj": {
          "type": "ED",
          "value": "TBD",
          "media_type": "text/plain"
        }
      },
      {
        "code": "IPP",
        "value": "Patients 18-75 years of age with diabetes with a visit during the measurement period",
        "name": "Initial Patient Population",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.1063",
          "code": "IPP",
          "original_text": "Initial Patient Population"
        },
        "value_obj": {
          "type": "ED",
          "value": "Patients 18-75 years of age with diabetes with a visit during the measurement period",
          "media_type": "text/plain"
        }
      },
      {
        "code": "DENOM",
        "value": "Equals Initial Patient Population",
        "name": "Denominator",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.1063",
          "code": "DENOM",
          "original_text": "Denominator"
        },
        "value_obj": {
          "type": "ED",
          "value": "Equals Initial Patient Population",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "None",
        "name": "Denominator Exclusions",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "Denominator Exclusions"
        },
        "value_obj": {
          "type": "ED",
          "value": "None",
          "media_type": "text/plain"
        }
      },
      {
        "code": "NUMER",
        "value": "Patients whose most recent LDL-C level performed during the measurement period is <100 mg/dL",
        "name": "Numerator",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.1063",
          "code": "NUMER",
          "original_text": "Numerator"
        },
        "value_obj": {
          "type": "ED",
          "value": "Patients whose most recent LDL-C level performed during the measurement period is <100 mg/dL",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "Not Applicable",
        "name": "Numerator Exclusions",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "Numerator Exclusions"
        },
        "value_obj": {
          "type": "ED",
          "value": "Not Applicable",
          "media_type": "text/plain"
        }
      },
      {
        "code": "DENEXCEP",
        "value": "None",
        "name": "Denominator Exceptions",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.1063",
          "code": "DENEXCEP",
          "original_text": "Denominator Exceptions"
        },
        "value_obj": {
          "type": "ED",
          "value": "None",
          "media_type": "text/plain"
        }
      },
      {
        "code": "MSRPOPL",
        "value": "Not Applicable",
        "name": "Measure Population",
        "code_obj": {
          "type": "CD",
          "system": "2.16.840.1.113883.5.1063",
          "code": "MSRPOPL",
          "original_text": "Measure Population"
        },
        "value_obj": {
          "type": "ED",
          "value": "Not Applicable",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "Not Applicable",
        "name": "Measure Observations",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "Measure Observations"
        },
        "value_obj": {
          "type": "ED",
          "value": "Not Applicable",
          "media_type": "text/plain"
        }
      },
      {
        "code": "OTH",
        "value": "For every patient evaluated by this measure also identify payer, race, ethnicity and sex.",
        "name": "Supplemental Data Elements",
        "code_obj": {
          "type": "CD",
          "null_flavor": "OTH",
          "original_text": "Supplemental Data Elements"
        },
        "value_obj": {
          "type": "ED",
          "value": "For every patient evaluated by this measure also identify payer, race, ethnicity and sex.",
          "media_type": "text/plain"
        }
      }
    ],
    "populations": [
      {"IPP":"IPP","DENOM":"DENOM","NUMER":"NUMER"}
    ],
    "measure_period": {
      "type": "IVL_TS",
      "low": {
        "type": "TS",
        "value": "201201010000",
        "inclusive?": true,
        "derived?": false
      },
      "high": {
        "type": "TS",
        "value": "201212312359",
        "inclusive?": true,
        "derived?": false
      },
      "width": {
        "type": "PQ",
        "unit": "a",
        "value": "1",
        "inclusive?": true,
        "derived?": false
      }
    }
  },
  "oids": [
    "2.16.840.1.113883.3.526.3.1248",
    "2.16.840.1.113883.3.464.1003.103.12.1001",
    "2.16.840.1.114222.4.11.837",
    "2.16.840.1.113762.1.4.1",
    "2.16.840.1.114222.4.11.836",
    "2.16.840.1.113883.3.560.100.4",
    "2.16.840.1.114222.4.11.3591",
    "2.16.840.1.113883.3.464.1003.101.12.1001",
    "2.16.840.1.113883.3.464.1003.101.12.1048",
    "2.16.840.1.113883.3.464.1003.101.12.1025",
    "2.16.840.1.113883.3.464.1003.101.12.1023",
    "2.16.840.1.113883.3.464.1003.101.12.1016",
    "2.16.840.1.113883.3.526.3.1240"
  ],
  "population_ids": {
    "IPP": "03E78AA2-C493-45AB-BE96-78449C05828C",
    "DENOM": "1A75D0C6-9F0E-47E4-8041-473B9053416B",
    "NUMER": "11AAA5F5-C6EB-41D9-9323-30295D244C46"
  }
}
